// <auto-generated />
using System;
using Back.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Back.Migrations
{
    [DbContext(typeof(TVContext))]
    [Migration("20210822230239_V2")]
    partial class V2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Back.Models.Channel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("NetworkID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("NetworkID");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("Back.Models.Network", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Password")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("ID");

                    b.ToTable("Networks");
                });

            modelBuilder.Entity("Back.Models.Slot", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChannelID")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Content")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Hour")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ChannelID");

                    b.ToTable("Slots");
                });

            modelBuilder.Entity("Back.Models.Channel", b =>
                {
                    b.HasOne("Back.Models.Network", null)
                        .WithMany("Channels")
                        .HasForeignKey("NetworkID");
                });

            modelBuilder.Entity("Back.Models.Slot", b =>
                {
                    b.HasOne("Back.Models.Channel", null)
                        .WithMany("Slots")
                        .HasForeignKey("ChannelID");
                });

            modelBuilder.Entity("Back.Models.Channel", b =>
                {
                    b.Navigation("Slots");
                });

            modelBuilder.Entity("Back.Models.Network", b =>
                {
                    b.Navigation("Channels");
                });
#pragma warning restore 612, 618
        }
    }
}
